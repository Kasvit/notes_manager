name: Notes Manager Github CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: notes_manager_test
          MYSQL_USER: root
          MYSQL_PASSWORD: root
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      RAILS_ENV: test
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      DATABASE_HOST: 127.0.0.1
      MYSQL_DATABASE: notes_manager_test
      MYSQL_ROOT_PASSWORD: root
      MONGODB_URI: mongodb://127.0.0.1:27017/test_db
      REDIS_URL: redis://localhost:6379/0

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h 127.0.0.1 -u test_user -p'test_password'; do
            echo 'waiting for mysql to be connectable...'
            sleep 3
          done

      - name: Verify MySQL connection from host
        run: |
          sudo apt-get install -y mysql-client libmysqlclient-dev
          mysql -u root -proot -e "CREATE DATABASE IF NOT EXISTS notes_manager_test; GRANT ALL PRIVILEGES ON notes_manager_test.* TO 'root'@'%' IDENTIFIED BY 'root'; FLUSH PRIVILEGES;"
          mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --host 127.0.0.1 --port 3306 -u root -proot mysql

      - name: Check MySQL status
        run: mysqladmin ping -h127.0.0.1 -uroot -proot

      - name: Set up MySQL
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load

      - name: Set up MongoDB
        run: |
          sudo apt-get install -y mongodb
          mongo --eval 'db.createCollection("test")' test_db

      - name: Run tests
        run: |
          bundle exec rspec
        env:
          MONGODB_URI: mongodb://127.0.0.1:27017/test_db
          REDIS_URL: redis://localhost:6379/0
